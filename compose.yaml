services:
  db:
    image: postgres:latest
    restart: always
    volumes:
      - mysqldata:/var/lib/mysql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  web:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - react-static:/usr/share/nginx/html
    depends_on:
      - symfony
      - react
    
  symfony:
    build:
      context: ./symfony
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
  
  react:
    build:
      context: ./react
      dockerfile: Dockerfile
    volumes:
      - react-static:/app/dist
    depends_on:
      - symfony
  
volumes:
  mysqldata:
  react-static: